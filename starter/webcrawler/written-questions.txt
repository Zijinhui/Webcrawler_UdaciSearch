Written Questions

Q1. Run the web crawler using the configurations located at src/main/config/written_question_1a.json and
    src/main/config/written_question_1b.json. The only difference between these configurations is that one always uses
    the sequential crawler and the other always uses the parallel crawler. Inspect the profile output in
    profileData.txt.

    If you are using a multi-processor computer, you should notice that SequentialWebCrawler#crawl and
    ParallelWebCrawler#crawl took about the same amount of time, but PageParserImpl#parse took much longer when run with
    the ParallelWebCrawler.

    Why did the parser take more time when run with ParallelWebCrawler?
    - It is because many different web pages will be open up at the same time when you run with ParallelWebCrawler.

Q2. Your manager ran your crawler on her old personal computer, using the configurations from Q1, and she notices that
    the sequential crawler actually outperforms the parallel crawler. She would like to know why.

    (a) Suggest one reason why the sequential web crawler was able to read more web pages than the parallel crawler.
        (Hint: Try setting "parallelism" to 1 in the JSON configs to simulate your manager's computer.)
        - The reason this issue exists is because her old personal computer might only has one processor.
          This program only tries to simulate the parallelism, but actually dose not support the it.

    (b) Suggest one scenario in which the parallel web crawler will almost certainly perform better than the sequential
        crawler. Why will it perform better?
        - When the computer has multi-processor, the parallel web crawler will almost certainly perform better. It can
          break one big task down into many small tasks and run them in parallel.

Q3. Analyze your method profiler through the lens of Aspect Oriented Programming, by answering the following questions:

    (a) What cross-cutting concern is being addressed by the com.udacity.webcrawler.profiler.Profiler class?
        - Analyze the performance of the web crawler. Therefore, the programmer or user can know how long
          method calls took to complete.

    (b) What are the join points of the Profiler in the web crawler program?
           - The profiling interceptor.


Q4. Identify three (3) different design patterns used in this project, and explain which interfaces, classes, and/or
    libraries use or implement those design patterns.

    For each pattern, name one thing about the pattern that you LIKED, and one thing you DISLIKED. If you did not like
    anything, you can name two things you disliked.

    #1. Abstract Factory: is used in ProfilingMethodInterceptor class and ProfilerImpl class
            Like: It's convenient to create several related kinds of objects by using the interface.
            Disliked: Makes the code more difficult to read and might be used incorrectly.

    #2. Builder Pattern: is used in CrawlerConfiguration class and CrawlResult class
            Like: I can create mutable versions of immutable objects.
            Disliked: Have to write a extra Builder class and more code.

    #3. Dependency Injection: is used in ProfilerImpl class, PageParserFactoryImpl class and ParallelWebCrawler class
            Like: Don't need to create objects by myself and the DI framework does it for me.
            Dislike: Increased number of classes.

